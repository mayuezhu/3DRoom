varying vec3  color;

void main()  // Standard lighting calculations...
{
    color = vec3(0.0, 0.0, 0.0);
    
	// Vertex position in eye coords
	vec3 ec_position = vec3(gl_ModelViewMatrix * gl_Vertex);
    
	// Transform normal into eye space
	vec3 tnorm = normalize(gl_NormalMatrix * gl_Normal);
	vec3 light_dir = normalize(gl_LightSource[0].position.xyz - ec_position);
	vec3 view_vec = -normalize(ec_position);
    
    vec3 r = reflect(-light_dir, tnorm);
    float VdotR = max(dot(view_vec, r), 0.0);
    vec3 specular = vec3( gl_FrontMaterial.specular * gl_LightSource[0].specular ) *
    pow(VdotR, 1.0);
    
	vec3 ambient = vec3(gl_FrontMaterial.ambient * gl_LightSource[0].ambient);
    float NdotL = abs(dot(tnorm, light_dir));
	vec3 diffuse = ambient+(gl_FrontMaterial.diffuse*gl_LightSource[0].diffuse).rgb * NdotL;
    
	gl_TexCoord[0] = gl_MultiTexCoord0;
	gl_Position = ftransform();